let Tokenizer,AstNode,Post,MeBlock;_fe6‍.x([["default",()=>Program]]);_fe6‍.w("../libs/tokenizer",[["default",["Tokenizer","AstNode"],function(v){Tokenizer=AstNode=v}]]);_fe6‍.w("./post",[["default",["Post"],function(v){Post=v}]]);_fe6‍.w("./meBlock.js",[["default",["MeBlock"],function(v){MeBlock=v}]]);




               class Program {//extends AstNode {

    constructor() {
        //super();
        this.statements = [];
    }

    mockParse(val) {
        console.log("mock parse for program");
        var s = null;
        if (val == 1) {
            s = new MeBlock();
        } else {
            s = new Post();
        }
        s.mockParse();
        this.statements.push(s);;
        _fe6‍.g.console.log(this.statements.length);
    }

    parse() {
        tokenizer.getAndCheckNext("Create Blog");
        while(!tokenizer.checkToken("Done for now")) {
                var statement = null;
                if (tokenizer.CheckToken("About me")) {
                    statement = new MeBlock();
                }
                if (tokenizer.CheckToken("Post")) {
                    statement = new Post();
                }
                statement.parse();
                this.statements.push(statement);
        }
    }
}